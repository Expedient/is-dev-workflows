name: PR Validation
on:
  workflow_call:
    inputs:
      KUBERNETES_REPO:
        required: false
        default: expedient/kubernetes
        description: 'The GitHub repository to deploy to'
        type: string
      KUBERNETES_REPO_REF:
        required: false
        description: 'The GitHub repository reference to deploy to'
        type: string
        default: 'master'
      APPLICATION:
        required: true
        description: 'The name of the application should match the github repo name, the k8s repo directory, the dockerhub repo name, and the name of the postman files.'
        type: string
      KUSTOMIZE_PATH:
        required: false
        description: 'The path in the k8s repo directory to the kustomization.yaml file to deploy from.'
        type: string
        default: kustomize/overlays/environments/ci
      IMAGE_DIGEST:
        required: true
        description: 'The digest of the image you want to run tests on.'
        type: string
      TEST_SUFFIX:
        required: false
        description: 'The suffix of the postman test file to run.'
        type: string
        default: ''
    secrets:
      IS_CICD_GITHUB_ACTION_TOKEN:
        required: true
      IS_DOCKER_HUB_USERNAME:
        required: true
      IS_DOCKER_HUB_PASSWORD:
        required: true

jobs:
  functional-tests:
    runs-on: ubuntu-20.04
    name: Functional Tests
    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{inputs.APPLICATION}}
      - uses: actions/checkout@v3
        with:
          repository: ${{inputs.KUBERNETES_REPO}}
          ref: ${{inputs.KUBERNETES_REPO_REF}}
          token: ${{secrets.IS_CICD_GITHUB_ACTION_TOKEN}}
          path: kubernetes
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.9.0
      - name: Check kind
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
      - name: Update kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Set default namespace
        run: |
          kubectl config set-context --current --namespace=default
      - name: Create docker-registry secret
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.IS_DOCKER_HUB_USERNAME }} \
            --docker-password=${{ secrets.IS_DOCKER_HUB_PASSWORD }} \
            --docker-email=information-systems@expedient.com
      - name: Set image on manifests and apply to KinD
        run: |
          cd kubernetes/applications/${{inputs.APPLICATION}}/${{inputs.KUSTOMIZE_PATH}}
          kustomize edit set image expedient/${{inputs.APPLICATION}}@${{inputs.IMAGE_DIGEST}}
          kubectl apply -k .
      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status --timeout=5m deploy/${{inputs.APPLICATION}}
      - name: Print logs if failed deployment
        if: failure()
        run: |
          kubectl logs deploy/${{inputs.APPLICATION}} --all-containers
      - name: Run newman tests
        run: |
          cd ${{inputs.APPLICATION}}
          tar cf - postman/ | kubectl exec -i deploy/${{inputs.APPLICATION}} -c newman -- tar xf - -C /etc/newman
          kubectl exec deploy/${{inputs.APPLICATION}} -c newman -- newman run postman/collections/${{inputs.APPLICATION}}${{inputs.TEST_SUFFIX}}.postman_collection.json -e postman/environments/${{inputs.APPLICATION}}.postman_environment.json --verbose
          